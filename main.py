import telebot
from config import TOKEN
from data_fetch import fetch_data
from analysis import analyze

bot = telebot.TeleBot(TOKEN)

@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ /signal 1 –∏–ª–∏ /signal 5, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–∏–≥–Ω–∞–ª –ø–æ EUR/USD —Å –∞–Ω–∞–ª–∏–∑–æ–º.")

@bot.message_handler(commands=['signal'])
def send_signal(message):
    try:
        parts = message.text.strip().split()
        timeframe = int(parts[1]) if len(parts) > 1 else 1
        if timeframe not in [1, 3, 5, 15]:
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ —Ç–∞–π–º—Ñ—Ä–µ–π–º: 1, 3, 5 –∏–ª–∏ 15 –º–∏–Ω—É—Ç. –ù–∞–ø—Ä–∏–º–µ—Ä: /signal 5")
            return

        raw_data = fetch_data()
        # –ê–≥—Ä–µ–≥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ —Ç–∞–π–º—Ñ—Ä–µ–π–º—É
        df = raw_data.copy()
        df['datetime'] = pd.to_datetime(df['datetime'])
        df.set_index('datetime', inplace=True)
        df = df.resample(f'{timeframe}T').agg({'close': 'last'}).dropna().reset_index()

        signal, entry, tp, sl, eta = analyze(df)
        if signal:
            bot.send_message(message.chat.id,
                f"üìä –°–∏–≥–Ω–∞–ª: {signal}\n"
                f"üí∞ –í—Ö–æ–¥: {entry}\n"
                f"üéØ TP: {tp} | üõë SL: {sl}\n"
                f"‚è≥ –ü—Ä–æ–≥–Ω–æ–∑ –≤—Ä–µ–º–µ–Ω–∏ –¥–æ TP: ~{eta} –º–∏–Ω"
            )
        else:
            bot.send_message(message.chat.id, "–°–∏–≥–Ω–∞–ª–æ–≤ –Ω–µ—Ç –ø–æ —Ç–µ–∫—É—â–µ–º—É –∞–Ω–∞–ª–∏–∑—É.")
    except Exception as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: {e}")

bot.polling()