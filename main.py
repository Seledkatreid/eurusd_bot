import telebot
import pandas as pd
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from config import TOKEN
from data_fetch import fetch_data
from analysis import analyze

bot = telebot.TeleBot(TOKEN)

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞
def build_timeframe_keyboard():
    markup = InlineKeyboardMarkup()
    buttons = [
        InlineKeyboardButton(text="1 –º–∏–Ω", callback_data="tf_1"),
        InlineKeyboardButton(text="3 –º–∏–Ω", callback_data="tf_3"),
        InlineKeyboardButton(text="5 –º–∏–Ω", callback_data="tf_5"),
        InlineKeyboardButton(text="15 –º–∏–Ω", callback_data="tf_15"),
    ]
    markup.row(*buttons[:2])
    markup.row(*buttons[2:])
    return markup

@bot.message_handler(commands=['start', 'signal'])
def send_menu(message):
    bot.send_message(message.chat.id, 
                     "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞–π–º—Ñ—Ä–µ–π–º –¥–ª—è —Å–∏–≥–Ω–∞–ª–∞:", 
                     reply_markup=build_timeframe_keyboard())

@bot.callback_query_handler(func=lambda call: call.data.startswith("tf_"))
def callback_timeframe(call: CallbackQuery):
    try:
        tf = int(call.data.split("_")[1])
        # –∞–≥—Ä–µ–≥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
        raw = fetch_data()
        df = pd.DataFrame(raw)
        df['datetime'] = pd.to_datetime(df['datetime'])
        df.set_index('datetime', inplace=True)
        df = df.resample(f'{tf}T').agg({'close': 'last'}).dropna().reset_index()

        signal, entry, tp, sl, eta = analyze(df)
        if signal:
            text = (
                f"üìä –°–∏–≥–Ω–∞–ª: {signal}\n"
                f"üí∞ –í—Ö–æ–¥: {entry}\n"
                f"üéØ TP: {tp} | üõë SL: {sl}\n"
                f"‚è≥ –ü—Ä–æ–≥–Ω–æ–∑ –¥–æ TP: ~{eta} –º–∏–Ω\n"
                f"üïí –¢–∞–π–º—Ñ—Ä–µ–π–º: {tf} –º–∏–Ω"
            )
        else:
            text = f"–ù–∞ —Ç–∞–π–º—Ñ—Ä–µ–π–º–µ {tf} –º–∏–Ω —Å–∏–≥–Ω–∞–ª–æ–≤ –Ω–µ—Ç."
        bot.send_message(call.message.chat.id, text)
    except Exception as e:
        bot.send_message(call.message.chat.id, f"–û—à–∏–±–∫–∞: {e}")

if __name__ == '__main__':
    bot.polling()